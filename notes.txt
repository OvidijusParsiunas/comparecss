consider using dropdown instead of select in options
export color values that are set to inherit
when hovering a subcomponent mode option, should highlight the area
if close button css will remain static, consider placing them into a separate object that can be used when exporting the file
calculate the alert height size after the css file has been exported
calculate height by:
  (current height - default height) / 2 = padding
  current padding - padding = new padding
test export with shadow and other properties, questionable if it works correctly
setting types should an enum
potentially have animation for when optional subcomponent options buttons appear and are hidden
consider freezing the settings view instead of removing it when options don't match or a subcomponent is removed
firefox color selector

highlight the subcomponent on hover
solve the initial hover of the subcomponent toggle button problem where it has not loaded up

either define all default mode css in the beginning, or will have to change code to automatically default missing css with the default setting spec values to help display the settings pane correctly too (preview mode will also need to contain default values)

cursor that allows user to hover over component's parts and upon clicking would direct to the rightful settings
color active toolkit button
color active component card
option to see what the actual css looks like and to edit it
consider placing javascript unique to the css classes it was used on
sometimes setting to auto option like the margin does not set desired results, potentially remove it - or set beginner components (in modal) to have no margin as auto
decide where the display code and download buttons should go

font-awesome pictures on buttons
material design examples should have nice hover, and shadow increase events on mouse click
button to switch between px, em
if button height exceeds certain threshold - only then should the 'Centered' setting be displayed in the 'Text' panel


---------------------------------------------------

Future work 

Room for optimising the exported css file contents to reuse repeated css properties
Allow the button to have its text vertically centered for all heights via the use of a class without the need for it to be applied to a button tag:
Currently works with the button tag only, this is due to the fact that if we are using <div> or <a> - we need to use display: table-cell property which does not allow for the use of margins.
One solution would be to automatically apply padding as the button height is increased - so as to make the text look like it is vertically centered.
This would use the following equation: (total button height - text height) / 2 = padding top and padding bottom pixels.


--------------------------------------------------

use composition functions to make them shearable - https://www.netlify.com/blog/2020/03/10/reactivity-in-vue-3/ https://composition-api.vuejs.org/#logic-extraction-and-reuse
  note: they are only good for utilising lifecycle handlers like onMounted and onUnmounted within the function

use native implementation of vuesax when it is compatible with vue 3

https://www.bannersnack.com/generator.html

reference css component versions - uikit v3 - in popover when hovering logo

try to use css asset files so you can lazy load them
statistics should include size and github popularity
think about having loading placeholders when the images are loading up for cards

when an alert close button doesn't work - have a toaster message appear to say that this functionality is not provided out of the box

https://startbootstrap.com/previews/simple-sidebar/ - phone feature

make the panels order switchable via options popover or drag and drop
https://www.youtube.com/watch?v=RA7sO_9V3vw&ab_channel=ProgramWithErik

Maybe have multiple cards flying randomly with different framework logos
https://lobe.ai/examples
https://vuetifyjs.com/en/
https://lusaxweb.github.io/vuesax/development/
https://mdbootstrap.com/docs/jquery/design-blocks/