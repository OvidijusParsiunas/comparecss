instead of having a dropdown for active and removed subcomponents we can have a + for adding subcomponents to it - base -> layer -> button/text
ability to copy sibling subcomponent instead of importing style
maybe should allow import a new button alltogether instead of creating a new button and then changing its style
after adding a new subcomponent, open its options
rename import button to copy
when close removed in alert - animations should be disabled
make sure sync animation still works as expected
make sure the spacing between buttons consistent

overflow
try with button tags
check to see if text can be placed into another div

when switching subcomponent alignment, highlight the subcomponent so that it is clear where it is being moved
an alternative to using spaces for ids would be to append id numbers at the start and cut them out from the dropdown option elements
when a subcomponent is added or removed - should have an appropriate animation like stretch to make it more interactive
when hovering the insync button - the popover should say what component/subcomponent is it in-sync to
potentially add x button to border coloring
close button should probably be imported - but need to work through the logistics of inherited css for it
display second range value with 2 decimal points
close button may need to be a badge
consider having a dropdown to choose which border side to edit
have a builder for contents within the settings
maybe each equal section should be selectable
consider making alert and button into a separately generated compontes in component preview as their contents shake when size is changed in firefox
when changing the range and clicking the right mouse button causes the popover to disappear

UX:
  when moving subcomponent alignment, should the subcomponent be placed at the right or left of the alignment
  which expanded modal preview toggle button highlighted style is more preferable, the chromium or firefox one
  on using the select key for picking a subcomponent, check whether the mouse should always be a pointer, marked with UX - SUBCOMPONENT SELECT
  on expanded modal mode toggle open and close animations, does the toolbar needs to fade in and out with the same duration as modal, marked with UX - EXPANDED MODAL TOGGLE ANIMATION
  is the new blue color preview good enough
  enter behaviour ok in new componant modal?
  check if switching component modes to default but leaving same option is ok for UX
  see if the subcomponent add and subcomponent remove hover and active css is ok
  check if position option in the modal is ok to use

when leaving dropdown option with mouse - remove the option highlight
importing existing subcomponent will also need to offer an option from the app defaults
update the range using the scroll wheel
ability to group the components
option to see what the actual css looks like and to edit it
sometimes setting to auto option like the margin does not set desired results, potentially remove it - or set beginner components (in modal) to have no margin as auto
decide where the display code and download buttons should go

font-awesome pictures on buttons
material design examples should have nice hover, and shadow increase events on mouse click
button to switch between px, em (at the moment optimization is only configured for px)
if button height exceeds certain threshold - only then should the 'Centered' setting be displayed in the 'Text' panel
the options/available components/subcomponents could all be fetched via an endpoint to maintain site integrity

interactice tool to demo css - like a runtime addon (like stackblitz)
website builder
the current infrastructure does not support layers within layers in the component preview and the subcomponent dropdown

---------------------------------------------------
show off components to design:
modals with gifs in them - https://icepanel.io/?human=architect

---------------------------------------------------

Future work

Changing the overlay to blurred vision, protanopia atc to show what the users will see with the mew component
Room for optimising the exported css file contents to reuse repeated css properties
Allow the button to have its text vertically centered for all heights via the use of a class without the need for it to be applied to a button tag:
Currently works with the button tag only, this is due to the fact that if we are using <div> or <a> - we need to use display: table-cell property which does not allow for the use of margins.
One solution would be to automatically apply padding as the button height is increased - so as to make the text look like it is vertically centered.
This would use the following equation: (total button height - text height) / 2 = padding top and padding bottom pixels.


--------------------------------------------------

use composition functions to make them shearable - https://www.netlify.com/blog/2020/03/10/reactivity-in-vue-3/ https://composition-api.vuejs.org/#logic-extraction-and-reuse
  note: they are only good for utilising lifecycle handlers like onMounted and onUnmounted within the function

use native implementation of vuesax when it is compatible with vue 3

https://www.bannersnack.com/generator.html

reference css component versions - uikit v3 - in popover when hovering logo

try to use css asset files so you can lazy load them
statistics should include size and github popularity
think about having loading placeholders when the images are loading up for cards

when an alert close button doesn't work - have a toaster message appear to say that this functionality is not provided out of the box

https://startbootstrap.com/previews/simple-sidebar/ - phone feature

make the panels order switchable via options popover or drag and drop
https://www.youtube.com/watch?v=RA7sO_9V3vw&ab_channel=ProgramWithErik

Maybe have multiple cards flying randomly with different framework logos
https://lobe.ai/examples
https://vuetifyjs.com/en/
https://lusaxweb.github.io/vuesax/development/
https://mdbootstrap.com/docs/jquery/design-blocks/
